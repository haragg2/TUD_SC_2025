function [dx, y] =rot_pendulum(t, x, u, k, a, b, c, d, e, varargin)
  % Output equations.
  y = [x(1);                         
       x(3)                          
      ];
  % State equations.
  dx = [x(2);                        
       d*u(1) - k*x(2) - a*y(2)*cos(x(1) - x(3)) - ...
            a*x(4)^2*sin(x(1) - x(3)) - ...
            c*sin(x(1)); 
       x(4);
       - b*y(1)*cos(x(1) - x(3)) - ...
            b*x(2)^2*sin(x(1) - x(3)) - ...
            e*sin(x(3));    
       ]; 
%k = k/((m1 + m2)*l1)
% a = m2*l2 / (m1 + m2)*l1
% b = l1/l2
% c = g / l1
% d = 1/((m1 + m2)*l1)
% e = g/l2


%   dx = [x(2);                        
%        (u(1) - k*x(2) - a*y(2)*cos(x(1) - x(3)) - ...
%             a*x(4)^2*sin(x(1) - x(3)) - ...
%             c*sin(x(1))) / d; 
%        x(4);
%        (- b*y(1)*cos(x(1) - x(3)) - ...
%             b*x(2)^2*sin(x(1) - x(3)) - ...
%             e*sin(x(3))) / a;    
%        ]; 

%   dx = [x(2);                        
%        (u(1) - k*x(2) - m2*l2*y(2)*cos(x(1) - x(3)) - ...
%             m2*l2*x(4)^2*sin(x(1) - x(3)) - ...
%             g*(m1 + m2)*sin(x(1))) / ((m1 + m2)*l1); 
%        x(4);
%        (- m2*l1*y(1)*cos(x(1) - x(3)) - ...
%             m2*l1*x(2)^2*sin(x(1) - x(3)) - ...
%             g*m2*sin(x(3))) / (m2*l2);    
%        ]; 




% y(1) = (u - m2*l2*y(2)*cos(x(1) - x(3)) - ...
%     m2*l2*x(4)^2*sin(x(1) - x(3)) - ...
%     g*(m1 + m2)*sin(x(1))) / ((m1 + m2)*l1);
% 
% y(2) = (- m2*l1*y(1)*cos(x(1) - x(3)) - ...
%     m2*l1*x(2)^2*sin(x(1) - x(3)) - ...
%     g*m2*sin(x(3))) / (m2*l2);